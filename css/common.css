/* COMMON(공통) */
body {
  color: #333;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4; /* 행간 */
  font-family: 'Nanum Gothic', sans-serif;
}
img {
  display: block;
}
a {
  text-decoration: none; /* 텍스트 꾸밈 없음 */
}
.inner {
  width: 1100px;
  margin: 0 auto;
  position: relative;
}
.btn { /* .class는 우선순위 점수 10점 이니까 .btn은 우선순위 점수 10점 */
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  display: block;
  transition: .4s;
}
.btn:hover {
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse { /* ..class가 2개이니 우선순위 점수 20점  */
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse:hover { /* ..class선택자 2개 20점 + 가상클래스 선택자 : 10점 총 30점 */
  background-color: transparent; /* transparent 투명함을 의미 */
  color: #333;
}
.btn.btn--brown {
  color: #592B18;
  border-color: #592B18;
}
.btn.btn--brown:hover {
  color: #fff;
  background-color: #592B18;
}
.btn.btn--gold {
  color: #D9AA8A;
  border-color: #D9AA8A;
}
.btn.btn--gold:hover {
  color: #fff;
  background-color: #D9AA8A;
}
.btn.btn--white {
  color: #fff;
  border-color: #fff;
}
.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}
.back-to-position {
  opacity: 0;
  transition: 1s;
}
.back-to-position.to-right {
  transform: translateX(-150px);
}
.back-to-position.to-left {
  transform: translateX(150px);
}
.show .back-to-position {
  opacity: 1;
  transform: translateX(0);
}
.show .back-to-position.delay-0 {
  transition-delay: 0s; /* 명시적으로 적었다 */
}
.show .back-to-position.delay-1 {
  transition-delay: .3s;
}
.show .back-to-position.delay-2 {
  transition-delay: .6s;
}
.show .back-to-position.delay-3 {
  transition-delay: .9s;
}
.show .back-to-position.delay-4 {
  transition-delay: 1.2s;
}


/* HEADER */
header {
  width: 100%;
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed; /*브라우저의 뷰포트를 기준으로 배치를 한다*/
  /*position: fixed와 absolute는 가로넓이를 최소한으로 사용하려고 한다.
  기본값은 auto라서 최대를 사용하는게 맞지만 fixed와 absolute만 최소한이니 기억하자.
  최대한으로 사용하기 위해서는 width: 100%를 적용하면 된다.*/
  top: 0;
  z-index: 9;
}
header > .inner {
  height: 120px;
}
header .logo {
  height: 75px; /* 높이 */
  position: absolute; /* 배치 */
  top: 0; 
  bottom: 0;
  left: 0;
  margin: auto ;
}
header .sub-menu {
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;
}
header .sub-menu ul.menu {
  display: flex; /* 수평정렬 */
  font-family: Arial, sans-serif /* 글꼴을 지정해 주는 속성 */
}
header .sub-menu ul.menu li {
  position: relative;
}
header .sub-menu ul.menu li::before {
  content: "";

  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute; /* position: absolute, fixed 는 요소가 자동으로 블럭요소로 변하기 때문에 display: block; 를 지워도 된다.*/
  top: 0;
  bottom: 0;
  margin: auto 0;
}
header .sub-menu ul.menu li:first-child::before {
  display: none;
}
header .sub-menu ul.menu li a {
  font-size: 12px;
  padding: 11px 16px; /*내부여백*/
  display: block;
  color: #656565;
}
header .sub-menu ul.menu li a:hover /* hover 마우스를 올리면 생기는 변화를 추가한다 */  {
 color: #000;
}
header .sub-menu .search {
  height: 34px;
  position: relative;
}
header .sub-menu .search input {
  width: 36px; /*가로*/ 
  height: 34px; /*세로*/
  padding: 4px 10px; /*내부여백*/
  border: 1px solid #ccc; /*태두리선*/
  box-sizing: border-box; /*박스 크기: 테두리선에 맞춤*/
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width .4s;
}
header .sub-menu .search input:focus { /*서치 검색창 포커스*/
  width: 190px;
  border-color: #669900;
}
header .sub-menu .search .material-icons {
  height: 24px; /*아이콘 높이값 24px*/
  position: absolute; /* 기준 부모요소 search*/
  top: 0; /*수직 좌우정렬*/
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: .4s;
}
header .sub-menu .search.focused .material-icons {
  opacity: 0;
}
header .main-menu {
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
  display: flex;
}
header .main-menu .item {

}
header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}
header .main-menu .item:hover .item__name { 
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
  /*좌상단, 우상단, 우하단, 좌하단 순이다.*/
}
/*item__name에 hover를 부여 하는게 아니다,
item__contents에도 영향이 가야 하기때문에 item에 부여 해야 한다.*/
header .main-menu .item .item__contents {
  width: 100%;
  position: fixed; /*뷰포트를 기준으로*/
  left: 0;
  display: none;
}
header .main-menu .item:hover .item__contents {
  display: block;
}
header .main-menu .item .item__contents .contents__menu {
 background-color: #2c2a29;
}
header .main-menu .item .item__contents .contents__menu > ul {
  display: flex;
  padding: 20px 0;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}
header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px; /*글자와 관련된 내용들은 상속되기떄문에 부모요소에 적용하면 자식요소 전부다 상속*/
  background-image: url("../images/main_menu_pattern.jpg");
}
header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
}
header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}
header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}
header .badges .badge {
  border-radius: 10px;
  overflow: hidden; /*overflow: 넘침제어 이다. hidden은 넘친 내영을 잘라낸다.*/
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0,0,0,.15); /*box-shadow는 그림자를 만든다)*/
  cursor: pointer;
}


/* FOOTER */
footer{
  background-color: #272727;
  border-top: 1px solid #333;
}
footer .inner {
  padding: 40px 0 60px 0;
}
footer .menu {
  display: flex;
  justify-content: center;
}
footer .menu li {
  position: relative;
}
footer .menu li::before { /* ::before 가상요소 선택자는 당연히 content: ""; 가 등어있어야 한다. */
  content: "";
  width: 3px; /* 인라인 요소에서 가로 세로 값은 없기 때문에 블럭요소로 바꿔줘야 적용된다. */
  height: 3px;
  background-color: #555;
  position: absolute; /* position: absolute, fixed 를 사용하면 display 값이 자동으로 block로 바뀐다. */
  top: 0;
  bottom: 0;
  right: -1px;
  margin: auto;
}
footer .menu li:last-child::before { /* :last-child 마지막 자식요소를 선택한다. */
  display: none;
}
footer .menu li a {
  color: #ccc;
  font-size: 12px;
  font-weight: 700;
  padding: 15px;
  /* 인라인 요소는 마진과 페딩이라는 여백이라는 속성의 위아래 값을
  정상적으로 사용할 수 없기 때문에 display: block요소로 바꿔준다. */
  display: block;
}
footer .menu li a.green {
  color: #669900;
  /* a태그;;중 .green 이라는 클래스를 가진 요소의 글자 색상을
  그린으로 바꾼다.html 에서 추가 해 준다. */
}
footer .btn-group {
  display: flex;
  justify-content: center;
}
footer .btn-group .btn {
  font-size: 12px;
  margin-top: 20px;
  margin-right: 10px;
}
footer .btn-group .btn:last-child {
  margin-right: 0;
}
footer .info {
  margin-top: 30px;
  text-align: center;
}
footer .info span {
  margin-right: 20px;
  color: #999;
  font-size: 12px;
}
footer .info span:last-child {
  margin-right: 0;
}
footer .copyright {
  color:#999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}
footer .logo {
  /* img 테그로 만들어진 요소는 가로 넓이 가 없어도 
  수평 가운데 정렬을 할 수 있다. */
  margin: 30px auto 0;
}